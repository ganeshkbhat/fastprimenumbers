function primeUtils(){let i;if(primes)i=primes();else throw console.log("Primes API files missing"),Error("Primes API files missing");let{prime:e,primePrecalculated:s}=i,t;if(primesCount)t=primesCount();else throw console.log("Primes countjs API files missing"),Error("Primes countjs API files missing");let r;if(primesRange)r=primesRange();else throw console.log("Primes rangejs API files missing"),Error("Primes rangejs API files missing");function n(i){return s(i)?t.fastOptimized(i,2).primes[1]:t.fastOptimized(i,2).primes[0]}return{nextPrime:n,previousPrime:function i(e){var t=e,r=0;if(t<1e4){let f=[...stored];return s(t)||(t=n(t)),f[f.indexOf(t)-1]}for(let l=t;l>=2;l--)if(s(l)){if(2==++r)return l;continue}},nextPrimeSets:function i(e,r=1){if(s(e)){let n=t.fastOptimized(e,r+1).primes;return n.splice(1,n.length)}return t.fastOptimized(e,r).primes},previousPrimeSets:function i(t,r=1){let f=t,l=0,m=[];if(f<1e4){let u=[...stored];e(f)||(f=n(f));let o=u.indexOf(f);return o+1<=r?u.splice(0+(o+1-r),o):u.splice(o-r,o)}for(let P=f;P>=2;P--)if(s(P)){if(l++,m.push(P),l===r)return m;continue}}}}