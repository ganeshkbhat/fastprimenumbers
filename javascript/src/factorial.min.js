function primesFactorial(){let t,n;if(primesRange)t=primesRange();else throw console.log("Primes Range API files missing"),Error("Primes Range API files missing");if(primesCount)n=primesCount();else throw console.log("Primes Count API files missing"),Error("Primes Count API files missing");function e(t){t=BigInt(t);let n=BigInt(1);if(t<0||0===t)return!1;for(let e=BigInt(1);e<=t;e++)n*=e;return n}async function i(t,i,a="sqroot"){return await n.alternateWaysOptimized(t,i,a).primes.map(e)}async function a(n,i,a="sqroot"){return await t.alternateWaysOptimized(n,i,a).primes.map(e)}async function r(t,i){return await n.fastOptimized(t,i).primes.map(e)}async function s(n,i){return await t.fastOptimized(n,i).primes.map(e)}function o(){}function m(){}return{factorial:e,alternateWaysCount:function t(i,a,r="sqroot"){return n.alternateWays(i,a,r).primes.map(e)},alternateWaysCountOptimized:i,alternateWaysRange:function n(i,a,r="sqroot"){return t.alternateWays(i,a,r).primes.map(e)},alternateWaysRangeOptimized:a,fastCount:function t(i,a){return n.fast(i,a).primes.map(e)},fastCountOptimized:r,fastRange:function n(i,a){return t.fast(i,a).primes.map(e)},fastRangeOptimized:s}}